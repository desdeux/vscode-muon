{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "muon",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#operators"
		},
		{
			"include": "function-call"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#punctuation"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.structure.muon",
					"match": "\\b(struct|enum|tagged_pointer)\\b"
				},
				{
					"name": "keyword.statement.muon",
					"match": "\\b(break|return|continue)\\b"
				},
				{
					"name": "keyword.conditional.muon",
					"match": "\\b(if|else|match|and|or|in)\\b"
				},
				{
					"name": "keyword.repeat.muon",
					"match": "\\b(while|for)\\b"
				},
				{
					"name": "keyword.constant.default.muon",
					"match": "\\b(null)\\b"
				},
				{
					"name": "keyword.constant.bool.muon",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "keyword.control.muon",
					"match": "\\b(new)\\b"
				},
				{
					"name": "storage.type.muon",
					"match": "\\b(bool|bool32|void|pointer|fun|string)\\b"
				},
				{
					"name": "storage.type.integer.muon",
					"match": "\\b(sbyte|byte|short|ushort|u\\d+|i\\d+|int|uint|long|ulong|ssize|usize|float|double|char)\\b"
				},
				{
					"name": "meta.attribute.muon",
					"begin": "#\\!?",
					"end": "",
					"patterns": [
						{
							"include": "#stringcontent"
						}
					]
				},
				{
					"name": "storage.type.c.muon",
					"match": "\\b(cstring)\\b"
				}
			]
		},
		"operators": {
			"patterns":[
				{
					"name": "keyword.operator.logic.muon",
					"match": "(==|<(?!<)|<=|>(?!>)|>=|\\&\\&|\\|\\||\\:(?!=)|\\?)"
				},
				{
					"name": "keyword.operator.arithmetic.muon",
					"match": "(-%?|\\+%?|\\*%?|/|%)=?"
				},
				{
					"name": "keyword.operator.bitwise.muon",
					"match": "(!|&|\\^|\\|)=?"
				},
				{
					"name": "keyword.operator.assignment.muon",
					"match": "(:=)"
				},
				{
					"name": "keyword.operator.special.muon",
					"match": "(==|\\+\\+|\\*\\*)"
				}
			]
			},
		"comments": {
			"patterns":[
				{
				"name": "comment.line.documentation.muon",
				"begin": "//[!/](?=[^/])",
				"end": "$"
				},
				{
				"name": "comment.line.double-slash.muon",
				"begin": "//",
				"end": "$"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.muon",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.muon",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.muon",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.muon",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"stringcontent": {
			"patterns": [
				{
					"name": "constant.character.escape.muon",
					"match": "\\\\([nrt'\"\\\\]|(x[0-9a-fA-F]{2})|(u[0-9a-fA-F]{4})|(U[0-9a-fA-F]{6}))"
				},
				{
					"name": "invalid.illegal.unrecognized-string-escape.muon",
					"match": "\\\\."

				}
			]
		},
		"function-call": {
            "match": "\\b([A-Za-z_]\\w*)\\s*\\(",
            "captures": {
                "1": {
                    "name": "entity.name.function.muon"
                }
            }
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.float.muon",
					"match": "\\b[0-9][0-9_]*(\\.[0-9][0-9_]*)?[eE][+-]?[0-9_]+?\\b"
				},
				{
					"name": "constant.numeric.float.muon",
					"match": "\\b[0-9][0-9_]*(\\.[0-9][0-9_]*)?([eE][+-]?[0-9_]+)?\\b"
				},
				{
					"name": "constant.numeric.decimal.muon",
					"match": "\\b[0-9][0-9_]*\\b"
				},
				{
					"name": "constant.numeric.hexadecimal.muon",
					"match": "\\b0x[a-fA-F0-9_]+\\b"
				}
			]
		},
		"punctuation": {
            "patterns": [
                {
                    "match": "\\.",
                    "name": "punctuation.accessor.solidity"
                },
                {
                    "match": ",",
                    "name": "punctuation.separator.solidity"
                }
            ]
		}
	},
	"scopeName": "source.mu"
}